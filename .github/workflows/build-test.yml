name: Build & test

on:
  push:
    branches:
      - main
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11.0-a - 3.11']

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build wheel, run tests
      id: build_and_test
      run: |
        pip install --upgrade pip setuptools
        pip install -r requirements-ci.txt
        bandit --configfile=bandit.yaml --recursive pictureshow tests
        python setup.py bdist_wheel
        rm -rf pictureshow
        WHEEL_PATH="$(ls dist/*)"
        echo "WHEEL PATH: $WHEEL_PATH"
        pip install $WHEEL_PATH
        INSTALLED_PATH="$(pip show pictureshow | grep Location | cut -d' ' -f2)/pictureshow"
        echo "WHEEL INSTALLED TO: $INSTALLED_PATH"
        COV_REPORT_PATH="${{ github.workspace }}/coverage.xml"
        pytest --cov=$INSTALLED_PATH --cov-report=xml":$COV_REPORT_PATH" --cov-report=term
        echo "::set-output name=COV_REPORT_PATH::$COV_REPORT_PATH"
        echo "::set-output name=VERSION::$(pictureshow --version)"
        echo "::set-output name=WHEEL_PATH::$WHEEL_PATH"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.10'
      with:
        files: ${{ steps.build_and_test.outputs.COV_REPORT_PATH }}

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      if: matrix.python-version == '3.10' && startsWith(github.ref, 'refs/tags/')
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      if: matrix.python-version == '3.10' && startsWith(github.ref, 'refs/tags/')
      with:
        name: version ${{ steps.build_and_test.outputs.VERSION }}
        files: ${{ steps.build_and_test.outputs.WHEEL_PATH }}
