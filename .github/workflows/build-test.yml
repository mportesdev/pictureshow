name: Build & test

on:
  push:
    branches:
      - main
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true

    - name: Run code checks
      run: |
        pip install 'bandit[toml]==1.*' 'isort==5.*'
        bandit --configfile=pyproject.toml --recursive src tests
        isort --check --diff src tests

    - name: Run tests
      id: run_tests
      run: |
        pip install .
        echo "VERSION=$(pictureshow --version)" >> $GITHUB_OUTPUT
        pip install -r test-requirements.txt 'pytest-cov==4.*'
        pytest --cov --cov-report=xml --cov-report=term --verbose

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.12' && github.ref == 'refs/heads/main'

    - name: Build
      run: |
        pip install build
        python -m build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      if: matrix.python-version == '3.12' && startsWith(github.ref, 'refs/tags/')
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      if: matrix.python-version == '3.12' && startsWith(github.ref, 'refs/tags/')
      with:
        name: version ${{ steps.run_tests.outputs.VERSION }}
        files: 'dist/*'
